name: CI/CD Pipeline  # The name of the workflow

on:  # Events that trigger this workflow
  push:  # Runs when code is pushed
    branches:
      - main
      

jobs:
  test:  # Define a job named 'test'
    runs-on: ubuntu-latest  # The OS where the job runs

    steps:
      - name: Checkout code  # Step 1: Get the repository code
        uses: actions/checkout@v3

      - name: Set up Python  # Step 2: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9  # Change if you need a different version

      - name: Install dependencies  # Step 3: Install required packages
        run: |
          python -m venv venv  # Create a virtual environment
          source venv/bin/activate  # Activate virtual environment
          pip install -r requirements.txt  # Install dependencies

      - name: Run tests  # Step 4: Execute tests
        run: |
          source venv/bin/activate
          pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build and run Docker container
        run: |
          docker build -t my-flask-app .
          docker run -d -p 5000:5000 --name flask_app my-flask-app

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.NEW_SLACK_WEBHOOK }}
          SLACK_MESSAGE: "âœ… CI/CD Pipeline Succeeded!"
          SLACK_COLOR: "#36a64f"
